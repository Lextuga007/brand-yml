# Typography



# BrandTypography { #brand_yaml.BrandTypography }

`BrandTypography()`

Represents the typography configuration for a brand.

This class defines the structure and behavior of typography settings,
including fonts, base text, headings, monospace text, and links.

## Examples

::: {.panel-tabset}


###### Minimal

```{.yaml filename="_brand.yml"}
meta:
  name: examples/brand-typography-simple.yml
typography:
  fonts:
    - family: Open Sans
      source: file
  base: Open Sans
  headings: Roboto Slab
  monospace: Fira Code
```



###### Simple

```{.yaml filename="_brand.yml"}
meta:
  name: examples/brand-typography-simple.yml
color:
  primary: blue
typography:
  base:
    family: Open Sans
    line-height: 1.25
    size: 1rem
  headings:
    family: Roboto Slab
    color: primary
    weight: semi-bold
  monospace:
    family: Fira Code
    size: 0.9em
```



###### With Fonts

```{.yaml filename="_brand.yml"}
meta:
  name: examples/brand-typography-fonts.yml
color:
  primary: "#f24242"
typography:
  fonts:
    # Local files
    - family: Open Sans
      source: file
      files:
        - path: fonts/open-sans/OpenSans-Variable.ttf
        - path: fonts/open-sans/OpenSans-Variable-Italic.ttf
          style: italic

    # Online files
    - family: Closed Sans
      source: file
      files:
        - path: https://example.com/Closed-Sans-Bold.woff2
          weight: bold
        - path: https://example.com/Closed-Sans-Italic.woff2
          style: italic

    # Online Font Foundries
    - family: Roboto Slab
      source: google
      weight: 600..900
      style: normal
      display: block

    - family: Fira Code
      source: bunny
      # weight: [100, 200, 300, 400, 500, 600, 700, 800, 900]
      # style: [normal, italic]

  base:
    family: Open Sans
    line-height: 1.25
    size: 1rem

  headings:
    family: Roboto Slab
    color: primary
    weight: 600

  monospace:
    family: Fira Code
    size: 0.9em
```



###### With Color

```{.yaml filename="_brand.yml"}
meta:
  name: examples/brand-typography-color.yml

color:
  palette:
    red: "#FF6F61"
  primary: "#87CEEB"
  secondary: "#50C878"
  danger: red
  foreground: "#1b1818"
  background: "#f7f4f4"

typography:
  base:
    color: foreground
  headings:
    color: primary
  monospace-inline:
    color: background
    background-color: red
  monospace-block:
    color: foreground
    background-color: background
  link:
    color: danger
```

:::

## Attributes

fonts

:   [list](`list`)\[[BrandTypographyFontFamily](`brand_yaml.typography.BrandTypographyFontFamily`)\]

    A list of font family definitions. Each definition in the list describes
    a font family that is available to the brand. Fonts may be stored in
    files (either adjacent to `_brand.yml` or hosted online) or may be
    provided by [Google Fonts](https://fonts.google.com/) or [Font
    Bunny](https://fonts.bunny.net/) (a GDPR-compliant Google Fonts
    alternative).

base

:   [BrandTypographyBase](`brand_yaml.typography.BrandTypographyBase`) \| None

    The type used as the default text, primarily in the document body.

headings

:   [BrandTypographyHeadings](`brand_yaml.typography.BrandTypographyHeadings`) \| None

    The type used for headings. Note that these settings cover all heading
    levels (`h1`, `h2`, etc.).

monospace

:   [BrandTypographyMonospace](`brand_yaml.typography.BrandTypographyMonospace`) \| None

    The type used for code blocks and other monospaced text.

monospace_inline

:   [BrandTypographyMonospaceInline](`brand_yaml.typography.BrandTypographyMonospaceInline`) \| None

    The type used for inline code; inherits properties from `monospace`.

monospace_block

:   [BrandTypographyMonospaceBlock](`brand_yaml.typography.BrandTypographyMonospaceBlock`) \| None

    The type use for code blocks; inherits properties from `monospace`.

link

:   [BrandTypographyLink](`brand_yaml.typography.BrandTypographyLink`) \| None

    Type settings used for hyperlinks.

## Methods

| Name | Description |
| --- | --- |
| [css_include_fonts](#brand_yaml.BrandTypography.css_include_fonts) | Generates CSS include statements for the defined fonts. |

### css_include_fonts { #brand_yaml.BrandTypography.css_include_fonts }

`BrandTypography.css_include_fonts()`

Generates CSS include statements for the defined fonts.

This method creates CSS `@import` or `@font-face` rules for all fonts
defined in the typography configuration.

#### Returns

| Type         | Description                                                       |
|--------------|-------------------------------------------------------------------|
| [str](`str`) | A string containing CSS include statements for all defined fonts. |

# typography.BrandTypographyFontFamily { #brand_yaml.typography.BrandTypographyFontFamily }

`typography.BrandTypographyFontFamily`

Runtime representation of an annotated type.

At its core 'Annotated[t, dec1, dec2, ...]' is an alias for the type 't'
with extra annotations. The alias behaves like a normal typing alias,
instantiating is the same as instantiating the underlying type, binding
it to types is also the same.

# typography.BrandTypographyFontFiles { #brand_yaml.typography.BrandTypographyFontFiles }

`typography.BrandTypographyFontFiles()`



## Attributes

| Name | Description |
| --- | --- |


# typography.BrandTypographyFontGoogle { #brand_yaml.typography.BrandTypographyFontGoogle }

`typography.BrandTypographyFontGoogle()`



## Attributes

| Name | Description |
| --- | --- |


# typography.BrandTypographyFontBunny { #brand_yaml.typography.BrandTypographyFontBunny }

`typography.BrandTypographyFontBunny()`



## Attributes

| Name | Description |
| --- | --- |
